---
# version to setup of origin
## Note: originally we added the v to the version, but for consistency this should be the exact version
## ex. 3.10.0-alpha.0 becomes v3.10.0-alpha.0
## This code commented and can be reused if the exact version doesn't matter
#- name: set latest tag from git tag
#  shell: "git tag --list '{{ project }}-{{ version }}.*' | sort -V |sed \"s/{{ project }}-{{ version }}.//\" | tail -n1"
#  args:
#    chdir: "{{ openshift_repo_path }}"
#  register: LATEST_TAG
# To find this out:
# git ls-remote --tags https://github.com/openshift/openshift-ansible \
# | egrep 'openshift-ansible-[0-9]' | sort -t '/' -k 3 -V | tail -1 | awk '{print $2}' \
# | sed 's/refs\/tags\/\(.*\)/\1/' | sed 's/\^{}//'

- debug:
    msg: "PaaS-sig Props: {{ item.prop }} [ {{ item.value }} ]"
  with_items:
    - { prop: 'project', value: "{{ project }}" }
    - { prop: 'oa_version', value: "{{ oa_version }}" }
    - { prop: 'bleeding_edge', value: "{{ bleeding_edge }}" }
    #- { prop: 'latest_tag', value: "{{ LATEST_TAG.stdout }}" }

- name: check if changes have been applied
  #shell: "git log -n1 | grep 'Update variants for origin - {{ LATEST_TAG.stdout }}'"
  shell: "git log -n1 | grep 'Update variants for origin - {{ oa_version }}'"
  args:
    chdir: "{{ openshift_repo_path }}"
  ignore_errors: yes
  register: git_log

- name: checkout openshift-ansible version
  #shell: "git checkout {{ project }}-{{ oa_version }}.{{ LATEST_TAG.stdout }}"
  shell: "git checkout {{ oa_version }}"
  args:
    chdir: "{{ openshift_repo_path }}"
  when:
    - git_log.stdout == ""
    - bleeding_edge | bool == false

- name: update version of origin
  lineinfile:
    dest: "{{ openshift_repo_path }}/utils/src/ooinstall/variants.py"
    regexp: "Version\\('\\d+\\.\\d+', 'origin'\\).*"
    line: "                     Version('{{ origin_version.split('.')[0] | regex_replace('^v') }}.{{ origin_version.split('.')[1] }}', 'origin')"
    backrefs: yes
    state: present
  when: git_log.stdout == ""

- name: update variant
  lineinfile:
    dest: "{{ openshift_repo_path }}/utils/src/ooinstall/variants.py"
    regexp: "^DISPLAY_VARIANTS =.*"
    line: "DISPLAY_VARIANTS = (origin, OSE, REG,)"
    backrefs: yes
    state: present
  when: git_log.stdout == ""

- name: git commit updated variants for origin
  #shell: git commit -m "Update variants for origin - {{ LATEST_TAG.stdout }}" utils/src/ooinstall/variants.py
  shell: git commit -m "Update variants for origin - {{ oa_version }}" utils/src/ooinstall/variants.py
  args:
    chdir: "{{ openshift_repo_path }}"
  when: git_log.stdout == ""
