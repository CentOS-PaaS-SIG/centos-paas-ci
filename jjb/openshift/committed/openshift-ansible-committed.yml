- project:
    name: openshift-origin-committed
    ocname: openshift-origin-committed
    repo-subdir: origin
    site: duffy
    jslave_name: paas-sig-ci-slave01
    jslave_username: root
    provision-pb: $WORKSPACE/linch-pin/provision/site.yml
    inventory-layout-file: openshift-3node-inventory.yml
    prep-pb: paas-ci/playbooks/openshift/setup.yml
    rfs-pb: paas-ci/playbooks/openshift/repo_from_source.yml
    configure-ansible21: |
      #!/bin/bash
      set -xeuo pipefail
      pip install --upgrade ansible>=2.1.0
      pip install jsonschema functools32

      # create ansible.cfg
      cat << EOF > ansible.cfg
      [defaults]
      remote_user = root
      library  = $WORKSPACE/linch-pin/library:$WORKSPACE/duffy-ansible-module/library

      EOF
    provision-cluster: |
      #!/bin/bash
      set -xeuo pipefail

      # provision cluster
      ansible-playbook {provision-pb} -u root -v \
      -e "topology=$WORKSPACE/paas-ci/config/topologies/${{TOPOLOGY}}.yml" \
      -e "inventory_layout_file=$WORKSPACE/paas-ci/config/inv_layouts/{inventory-layout-file}" \
      -e "schema=$WORKSPACE/linch-pin/ex_schemas/schema_v2.json state=present"
    prep-cluster: |
      #!/bin/bash
      set -xeuo pipefail

      # see what we have in terms of inventory
      ansible-playbook -u root -vvv -i $WORKSPACE/inventory/ \
      $WORKSPACE/{prep-pb}
    teardown-cluster: |
      #!/bin/bash
      set -xeuo pipefail

      # teardown cluster
      ansible-playbook {provision-pb} -u root -v \
      -e "topology=$WORKSPACE/paas-ci/config/topologies/${{TOPOLOGY}}.yml" \
      -e "schema=$WORKSPACE/linch-pin/ex_schemas/schema_v2.json state=absent"
    jobs:
      - openshift-provision-prep-test-teardown

#    run-install: |
#      #!/bin/bash
#      set -xeuo pipefail
#
#      # Run openshift-ansible
#      chmod 600 $WORKSPACE/{ssh_keyfile}
#      ansible-playbook \
#        $WORKSPACE/{oa-playbook}
#    run-e2e-tests: |
#      #!/bin/bash
#      set -xeuo pipefail
#
#      # Run e2e tests
#      chmod 600 $WORKSPACE/{ssh_keyfile}
#      ansible-playbook \
#        $WORKSPACE/{run-e2e-tests-pb}
#    teardown-cluster: |
#      #!/bin/bash
#      set -xeuo pipefail
#
#      # Run upgrade
#      ansible-playbook \
#        -i $WORKSPACE/ci-factory/utils/central_ci_dynamic_hosts.py \
#        --private-key=$WORKSPACE/{ssh_keyfile} \
#        $WORKSPACE/{upgrade-ose-pb}
